{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","alien","id","name","email","CardList","aliens","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredAliens","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+TAIaA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,QAAQC,IAAG,+BAA0BH,EAAMI,MAAMC,GAAtC,4BACpB,6BAAKL,EAAMI,MAAME,OACjB,4BAAIN,EAAMI,MAAMG,YCHXC,G,MAAW,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACvB,OAAO,qBAAKR,UAAU,YAAf,SAECQ,EAAOC,KAAI,SAAAN,GAAK,OAAI,cAAC,EAAD,CAAqBA,MAAOA,GAAjBA,EAAMC,WCLpCM,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBAAOZ,UAAU,SAASa,KAAK,SAASF,YAAaA,EAAaG,SAAUF,MC6CjEG,E,kDAxCb,aAAe,IAAD,8BACZ,gBAgBFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAftC,EAAKC,MAAQ,CACXb,OAAQ,GACRU,YAAa,IALH,E,qDAWd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAET,OAAQkB,S,oBAQ3C,WAEE,MAAgCC,KAAKN,MAA7Bb,EAAR,EAAQA,OAAQU,EAAhB,EAAgBA,YACVU,EAAiBpB,EAAOqB,QAAO,SAAA1B,GAAK,OACxCA,EAAME,KAAKyB,cAAcC,SAASb,EAAYY,kBAIhD,OACE,sBAAK9B,UAAU,MAAf,UACE,qDACA,cAAC,EAAD,CAAWW,YAAY,yBAAyBC,aAAce,KAAKf,eACnE,cAAC,EAAD,CAAUJ,OAAQoB,W,GApCRI,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.dc583651.chunk.js","sourcesContent":["import React from 'react';\nimport './card.styles.css';\n\n\nexport const Card = (props) => (\n    <div className='card-container'>\n        <img alt='alien' src={`https://robohash.org/${props.alien.id}?set=set5&size=180x180`} />\n        <h2>{props.alien.name}</h2>\n        <p>{props.alien.email}</p>\n    </div>\n);","import React from 'react';\nimport { Card } from '../card/card.component';\n\nimport './card-list.styles.css';\n\nexport const CardList = ({ aliens }) => {\n    return <div className='card-list'>\n        {\n            aliens.map(alien => <Card key={alien.id} alien={alien} />)\n        }\n    </div>\n}; ","import React from 'react';\nimport './search-box.styles.css';\n\nexport const SearchBox = ({ placeholder, handleChange }) => (\n    <input className='search' type='search' placeholder={placeholder} onChange={handleChange} />\n\n)","\n\nimport React, { Component } from 'react';\nimport './App.css';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\n\nclass App extends Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      aliens: [],\n      searchField: ''\n    }\n\n  }\n\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({ aliens: users }));\n  }\n\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value });\n\n  }\n\n  render() {\n\n    const { aliens, searchField } = this.state;\n    const filteredAliens = aliens.filter(alien =>\n      alien.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n\n    return (\n      <div className=\"App\">\n        <h1>Extra Terrestrials!</h1>\n        <SearchBox placeholder='search the database...' handleChange={this.handleChange} />\n        <CardList aliens={filteredAliens} />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}